plugins {
    id 'java'
    id 'war'
}

group 'com.data'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    //để sử dụng spring mvc
    implementation 'org.springframework:spring-webmvc:5.3.23'
    implementation 'org.springframework:spring-context:5.3.23'
    implementation 'org.springframework:spring-beans:5.3.23' // Có thể không cần thiết nếu đã có spring-context
    implementation 'javax.servlet:jstl:1.2' // Nếu bạn dùng JSTL cho view (JSP)
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'commons-io:commons-io:2.8.0' // Cũng nên thêm commons-io
    implementation 'commons-fileupload:commons-fileupload:1.4'

    // để sử dụng lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // để sử dụng jdbc
    implementation 'org.springframework:spring-jdbc:5.3.23' // Thay đổi version nếu cần
    implementation 'mysql:mysql-connector-java:8.0.30' // Thay đổi version nếu cần


    // để sử dụng cloudinary
    // https://mvnrepository.com/artifact/com.cloudinary/cloudinary-core
    implementation 'com.cloudinary:cloudinary-core:1.38.0'
// https://mvnrepository.com/artifact/com.cloudinary/cloudinary-http44
    implementation 'com.cloudinary:cloudinary-http44:1.32.2'

    // để sử dụng validation

    // validation
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '6.1.0.Final'

    implementation("org.thymeleaf:thymeleaf-spring5:3.0.12.RELEASE")
}

test {
    useJUnitPlatform()
}